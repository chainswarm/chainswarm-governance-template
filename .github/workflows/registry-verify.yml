name: Verify Miner Registration
on:
  pull_request:
    paths:
      - 'registry/miners/**.yaml'
permissions:
  contents: read
  pull-requests: write

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: npm i @polkadot/util-crypto @polkadot/util
      - name: Validate files & signatures
        run: |
          ok=1
          for f in registry/miners/*.yaml; do
            [ -f "$f" ] || continue
            GH=$(grep -E '^github:' "$f" | awk '{print $2}')
            HK=$(grep -E '^hotkey_ss58:' "$f" | awk '{print $2}')
            NONCE=$(grep -E '^nonce:' "$f" | awk '{print $2}')
            SIG=$(grep -E '^signature_b64:' "$f" | awk '{print $2}')
            node - <<JS
            const {decodeAddress, signatureVerify} = require('@polkadot/util-crypto');
            const {u8aConcat, u8aToU8a} = require('@polkadot/util');
            const hk='${HK}', nonce='${NONCE}', sigB64='${SIG}';
            try{
              const pub = decodeAddress(hk);
              const msg = u8aConcat(Uint8Array.from(Buffer.from(nonce,'hex')), u8aToU8a(hk));
              const sig = Uint8Array.from(Buffer.from(sigB64,'base64'));
              const ok = signatureVerify(msg, sig, pub).isValid;
              if(!ok){ process.exit(2); }
            }catch(e){ process.exit(3); }
            JS
            rc=$?
            if [ $rc -ne 0 ]; then echo "::error file=$f::Bad signature"; ok=0; fi
          done
          if [ $ok -ne 1 ]; then exit 1; fi
      - uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({ ...context.issue, labels: ['verified'] })
